package practice.bookyard.client;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.Key;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.impl.crypto.MacProvider;

public class LoginPanel extends JPanel {
	
	private static final long serialVersionUID = 1L;
	
	protected JLabel lblUserName;
	protected JLabel lblPassword;
	protected JTextField txtUserName;
	protected JPasswordField txtPassword;
	protected JButton btnLogin;
	protected JButton btnCancel;
	protected JDialog containerDialog;

	public LoginPanel(JDialog containerDialog) {
		super();
		
		this.containerDialog = containerDialog;
		this.Initialize();
	}
	
	protected void Initialize() {
		
		this.setLayout(new GridBagLayout());
		GridBagConstraints constraints = new GridBagConstraints();
		
		// Create controls
		lblUserName = new JLabel("User Name: ");
		lblPassword = new JLabel("Password: ");
		txtUserName = new JTextField(15);
		txtPassword = new JPasswordField(15);
		txtPassword.setEchoChar('*');
		btnLogin = new JButton("Login");
		btnCancel = new JButton("Cancel");
		
		// Set them on the panel using the constraints
		// 3 rows, 3 columns
		
		// lblUserName
		constraints.anchor = GridBagConstraints.FIRST_LINE_END;
		constraints.weighty = 0.1;
		constraints.gridx = 0;
		constraints.gridy = 0;
		this.add(lblUserName, constraints);
		
		// txtUserName
		constraints.gridx = 1;
		constraints.gridy = 0;
		constraints.gridwidth = 2;
		this.add(txtUserName, constraints);
		
		// lblPassword
		constraints.gridx = 0;
		constraints.gridy = 1;
		constraints.gridwidth = 1;
		this.add(lblPassword, constraints);
		
		// txtPassword
		constraints.gridx = 1;
		constraints.gridy = 1;
		constraints.gridwidth = 2;
		this.add(txtPassword, constraints);
		
		// btnLogin
		constraints.anchor = GridBagConstraints.FIRST_LINE_END;
		constraints.weighty = 0.8;
		constraints.gridx = 1;
		constraints.gridy = 2;
		constraints.gridwidth = 1;
		this.add(btnLogin, constraints);
		
		// btnCancel
		constraints.anchor = GridBagConstraints.FIRST_LINE_START;
		constraints.gridx = 2;
		constraints.gridy = 2;
		constraints.gridwidth = 1;
		this.add(btnCancel, constraints);
		
		btnLogin.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				// close the login dialog
				containerDialog.dispose();

				// Ask a component to authenticate the user
				
				// if the user is good, we load the new form
				
				// otherwise, we display the error message we
				// received from the API server
			}
		});
		
		btnCancel.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				
				containerDialog.dispose();
			}
		});

	}
}
